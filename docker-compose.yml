version: '3'

services:
  broker-service:
    build:
      context: ./Broker-Service
      dockerfile: ./cmd/api/docker-service.dockerfile
    restart: always
    ports:
      - "8080:80"
    deploy:
      mode: replicated
      replicas: 1

  logger-service:
    build:
      context: ./Logger-service
      dockerfile: ./cmd/api/docker-service.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1

  authentication-service:
    build:
      context: ./Authentication-service
      dockerfile: ./cmd/api/docker-service.dockerfile
    restart: always
    ports:
      - "8081:80"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=postgres port=5432 user=postgres password=password dbname=users sslmode=disable timezone=UTC connect_timeout=5"
    depends_on:
      - postgres

  front-end:
    build:
      context: ./front-end
      dockerfile: ./cmd/web/dockerfile
    restart: always
    ports:
      - "80:80"
    deploy:
      mode: replicated
      replicas: 1
    depends_on:
      - broker-service
      - authentication-service
  


  postgres:
    image: 'postgres:14.2'
    ports:
      - "5432:5432"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/ 

  mongo-db:
    image: 'mongo:4.4'
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./db-data/mongo/:/data/db

  
    